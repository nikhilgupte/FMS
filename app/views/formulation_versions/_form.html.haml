%fieldset 
  %ol.form
    %li
      = form.label :name
      = form.text_field :name
      = reqd
    %li
      = form.label :top_note
      = form.text_area :top_note, { :class => 'elastic', :style => 'width: 495px!important;height: 40px;' }
    %li
      = form.label :middle_note
      = form.text_area :middle_note, { :class => 'elastic', :style => 'width: 495px!important;height: 40px;' }
    %li
      = form.label :base_note
      = form.text_area :base_note, { :class => 'elastic', :style => 'width: 495px!important;height: 40px;' }
%fieldset#items
  %legend Ingredients
  = form.fields_for :items do |item_form|
    = render :partial => 'formulations/item_form', :locals => { :form => item_form }
.add_child= add_nested_fields_for(form, :items, 'items', { :label => '+ Add Item', :partial => 'formulations/item_form', :object => FormulationItem.new })
%fieldset
  %ol.buttons
    %li= form.submit "Save #{@formulation.class.name}", :class => :primary
    %li= cancel_link(@formulation)

- content_for :tail do
  :javascript
    $(function() {
      $("body").delegate(".compound_type", 'change', function() {
        $(this).parents('.inline_form').find('.compound').val('').focus();
      });
      $("body").delegate(".compound", 'focus', function() {
        var url = $(this).parents('.inline_form').find('.compound_type').val() == 'Ingredient' ? '#{autocomplete_ingredients_path}' : '#{autocomplete_accords_path}';
        $(this).autocomplete({
          source: url,
          minLength: 2,
          select: function( event, ui ) {
            $(this).next('.compound_id').val(ui.item.id);
          }
        });
      });

    });
